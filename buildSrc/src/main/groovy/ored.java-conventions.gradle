plugins {
    id "de.jjohannes.extra-java-module-info"
    id "io.spring.javaformat"
    id "checkstyle"
}

version = '1.0.1493-dev'
group = 'org.freenetproject'

repositories {
    mavenCentral()
}

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

dependencies {
    implementation files("$rootDir/lib/wrapper/lib/wrapper.jar")

    testImplementation platform(libs.junit.bom)
    testImplementation libs.junit.jupiter
    testCompileOnly libs.junit
    testRuntimeOnly libs.junit.vintage.engine
    testImplementation libs.mockito.core
    testImplementation libs.mockito.core

    checkstyle(libs.spring.javaformat.checkstyle)
}

checkstyle {
    toolVersion = libs.versions.checkstyle.get()
    configDirectory = file("$rootDir/checkstyle")
}

extraJavaModuleInfo {
    failOnMissingModuleInfo.set(false)
    module('wrapper.jar', 'org.tanukisoftware.wrapper', libs.versions.wrapper.get()) {
        exports 'org.tanukisoftware.wrapper'
        exports 'org.tanukisoftware.wrapper.jmx'
    }

    module('net.harawata:appdirs', 'net.harawata.appdirs') {
        exports 'net.harawata.appdirs'

        requires 'com.sun.jna'
        requires 'com.sun.jna.platform'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.withType(JavaCompile).configureEach {
    options.release = 17
    options.encoding = "UTF-8"
    options.javaModuleVersion = provider { project.version }
}

tasks.withType(Javadoc).configureEach {
    options.encoding = "UTF-8"
}
